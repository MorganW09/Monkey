let map = fn(arr, f) {
  let iter = fn(arr, accumulated) {
    if (len(arr) == 0) {
      accumulated
    } else {
    iter(rest(arr), push(accumulated, f(first(arr))));
    }
  };
  iter(arr, []);
};

let a = [1, 2, 3, 4];
let double = fn(x) { x * 2 };
let mapResult = map(a, double);
puts("Original array:", a);
puts("Mapped array:", mapResult);


let reduce = fn(arr, initial, f) {
  let iterate = fn(arr, result) {
    if (len(arr) == 0) {
      result
    } else {
      iterate(rest(arr), f(result, first(arr)));
    }
  };
  iterate(arr, initial);
};

let sum = fn(arr) {
  reduce(arr, 0, fn(initial, el) { initial + el });
};

let sumArray = [1,2,3,4,5,6,7,8,9];
let sumValue = sum(sumArray);
puts("Array:", sumArray);
puts("Array summed:", sumValue);